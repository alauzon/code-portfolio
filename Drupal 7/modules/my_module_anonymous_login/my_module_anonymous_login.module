<?php

/**
 * @file
 * Redirecting anonymous users to the front page if need be.
 *
 * They are allowed some pages like login and logout, etc...
 */

/**
 * Implements hook_init().
 */
function my_module_anonymous_login_init() {
  my_module_anonymous_login_redirect();
}

/**
 * Perform the anonymous user redirection, if needed.
 */
function my_module_anonymous_login_redirect() {
  // Check if user is anonymous.
  if (user_is_anonymous()) {
    $redirect = FALSE;

    // Detect whether this request is for cron or site installation or xmlrpc
    // request.
    foreach (array('cron', 'install', 'xmlrpc') as $task) {
      // Generate a path for the task.
      $path = base_path() . "{$task}.php";
      // See if we have a match.
      if (substr(request_uri(), 0, strlen($path)) == $path) {
        // Stops here.
        return;
      }
    }

    // Proceed if the request is not coming from the command-line.
    if (!drupal_is_cli()) {
      // Fetch paths to force login.
      $paths = my_module_anonymous_login_paths();

      // Continue only if there are paths set to redirect on.
      if (!empty($paths['include'])) {
        // Determine the current path.
        $path = drupal_strtolower(filter_xss($_GET['q']));

        // Convert the path if this is the home page.
        $path = $path ? $path : '<front>';
        if (strpos($path, 'user/reset/') !== FALSE) {
          // Matching a user reset password path is a hard stop.
          $redirect = FALSE;
        }
        else {
          // Determine the current path's alias.
          $alias = strtolower(drupal_get_path_alias($path));
          // See if we have a match for the included paths against the
          // current path and it's alias.
          foreach (array($path, $alias) as $check) {
            // Redirect if the path is a match for included paths.
            if (drupal_match_path($check, implode("\n", $paths['include']))) {
              $redirect = TRUE;
            }
            // Do not redirect if the path is a match for excluded paths.
            if (drupal_match_path($check, implode("\n", $paths['exclude']))) {
              $redirect = FALSE;
              // Matching an excluded path is a hard-stop.
              break;
            }
          }
        }

        // See if we're going to redirect.
        if ($redirect) {
          // See if we have a message to display.
          if ($message = variable_get('my_module_anonymous_login_message', NULL)) {
            drupal_set_message($message);
          }

          // Redirect to the login, keeping the requested path.
          drupal_goto('<front>');
        }
      }
    }
  }
}

/**
 * Fetch the paths that should be used.
 *
 * @return array
 *   An array of paths, keyed by "include", paths that should force a
 *   login, and "exclude", paths that should be ignored.
 *
 *   Fetch the paths that should be used when determining when to force
 *   anonymous users to login.
 */
function my_module_anonymous_login_paths() {
  $paths = array();

  $paths['include'] = array(
    '*',
  );
  $current_domain = domain_get_domain();
  $site_frontpage = variable_get('site_frontpage');
  $current_domain_subdomain = $current_domain['subdomain'];
  $paths['exclude'] = array(
    $site_frontpage,
    'user',
    'user/login',
    'user/register',
    'user/password',
  );

  return $paths;
}
